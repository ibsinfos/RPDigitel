<?php/** * Description of Project_Model * * @author NaYeM */class Items_Model extends MY_Model{   public $_table_name = '';    public $_order_by = 'project_id';    public $_org_id = 'org_id';    public $_primary_key = 'id';    function calculate_milestone_progress($milestones_id)    {        $all_milestone_tasks = $this->db->where('milestones_id', $milestones_id)->get('tbl_task')->num_rows();        $complete_milestone_tasks = $this->db->where(            array('task_progress' => '100',                'milestones_id' => $milestones_id            ))->get('tbl_task')->num_rows();        if ($all_milestone_tasks > 0) {            return round(($complete_milestone_tasks / $all_milestone_tasks) * 100);        } else {            return 0;        }    }    function calculate_project($project_value, $project_id)    {        switch ($project_value) {            case 'project_cost':                return $this->total_project_cost($project_id);                break;            case 'project_hours':                return $this->total_project_hours($project_id, true);                break;        }    }    function total_project_cost($project_id)    {        $project_hours = $this->total_project_hours($project_id);        $fix_rate = $this->get_any_field('tbl_project', array('project_id' => $project_id), 'fixed_rate');        $hourly_rate = $this->get_any_field('tbl_project', array('project_id' => $project_id), 'hourly_rate');        if ($fix_rate == 'No') {            return $project_hours * $hourly_rate;        } else {            return $this->get_any_field('tbl_project', array('project_id' => $project_id), 'project_cost');        }    }    function total_project_hours($project_id, $second = null)    {        $with_tasks = $this->get_any_field('tbl_project', array('project_id' => $project_id), 'with_tasks');        if ($with_tasks == 'yes') {            $all_tasks = $this->db->where('project_id', $project_id)->get('tbl_task')->result();        }        $task_time = 0;        if (!empty($all_tasks)) {            foreach ($all_tasks as $v_tasks) {                $task_time += $this->task_spent_time_by_id($v_tasks->task_id);            }        }        $project_time = $this->calculate_total_task_time($project_id);        if (!empty($second)) {            $logged_time = $task_time + $project_time;        } else {            $logged_time = ($task_time + $project_time) / 3600;        }        return $logged_time;    }    function calculate_total_task_time($project_id)    {        $total_time = "SELECT start_time,end_time,project_id,		end_time - start_time time_spent FROM tbl_tasks_timer WHERE project_id = '$project_id'";        $result = $this->db->query($total_time)->result();        $time_spent = array();        foreach ($result as $time) {            $time_spent[] = $time->time_spent;        }        if (is_array($time_spent)) {            return array_sum($time_spent);        } else {            return 0;        }    }    function project_hours($project_id)    {        $task_time = $this->get_sum('tbl_tasks', 'logged_time', array('project' => $project_id));        $project_time = $this->get_sum('tbl_project', 'time_logged', array('project_id' => $project_id));        $logged_time = ($task_time + $project_time) / 3600;        return $logged_time;    }    	public function get_permission_leads($table, $flag = null)    {        $role = $this->session->userdata('user_type');        $user_id = $this->session->userdata('user_id');        if ($role != 1 && $role != 4 ) {            $result_info = $this->db->get($table)->result();                                   if (!empty($result_info)) {                foreach ($result_info as $result) {                    if ($result->permission == 'all') {                        $permission[] = $result;                    } else {                        $get_permission = json_decode($result->permission);                        if (!empty($get_permission)) {                            foreach ($get_permission as $id => $v_permission) {                                if ($user_id == $id) {                                    $permission[] = $result;                                }                            }                        }                    }                }            }        } else {            $permission = $this->db->get($table)->result();        }        if (empty($permission)) {            $permission = array();        }        return $permission;    }    /*      public function get_permission($table, $flag = null) {         $this->_table_name   = $table;        $role = $this->session->userdata('user_type');        $user_id = $this->session->userdata('user_id');        if ($role != 1) {            $result_info = $this->db->get($table)->result();  //********************************** Code added by Ranjit on 10-04-2017 End *********************************// $result_info = $this->db->where('org_id',$this->session->userdata('org_id'))->get($table)->result();            if (!empty($result_info)) {                foreach ($result_info as $result) {                    if ($result->permission == 'all') {                        $permission[] = $result;                    } else {                        $get_permission = json_decode($result->permission);                        if (!empty($get_permission)) {                            foreach ($get_permission as $id => $v_permission) {                                if ($user_id == $id) {                                    echo $permission[] = $result;                                }                            }                        }                    }                }            }        } else {            $permission = $this->get();            //            $permission = $this->items_model->get_where(array('org_id'=>$this->session->userdata('org_id')), $table);                //********************************** Code added by Ranjit on 10-04-2017 **********************************            //            if($table=="tbl_project" || $table=="tbl_task" || $table=="tbl_invoices" || $table=="tbl_estimates"  || $table=="tbl_bug"   || $table=="tbl_opportunities" || $table=="tbl_goal_tracking" ){//                $permission = $this->db->get($table)->result();//                 $permission = $this->db->where('org_id',$this->session->userdata('org_id'))->get($table);           //            }else{            //            $permission = $this->db->where('org_id',$this->session->userdata('org_id'))->get($table);            //            echo $this->db->last_query();die(0);            //            }                                }        if (empty($permission)) {            $permission = array();        }        return $permission;    }         public function get($id = NULL, $single = FALSE) {         if ($id != NULL) {            $filter = $this->_primary_filter;            $id = $filter($id);            $this->db->where($this->_primary_key, $id);            $method = 'row';        } elseif ($single == TRUE) {            $method = 'row';        } else {            $method = 'result';        }              if($this->session->userdata('org_id')){            $this->db->where($this->_org_id, $this->session->userdata('org_id'));        }        if (!count($this->db->ar_orderby)) {            $this->db->order_by($this->_order_by);        }        //if($this->_table_name!="tbl_project"){        $q=$this->db->get('tbl_project');        //}      //  echo $this->db->last_query();die;                    return $q->$method();    }        */}